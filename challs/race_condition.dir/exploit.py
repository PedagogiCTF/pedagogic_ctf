#!/usr/bin/python3

import random
import string
import subprocess
import sys
import time

from multiprocessing import Process, Value


def run_cmd(correction_file, args):

    args.insert(0, correction_file)

    if correction_file.endswith('.py'):
        args.insert(0, 'python3')
    elif correction_file.endswith('.pl'):
        args.insert(0, 'perl')
    elif correction_file.endswith('.go'):
        args.insert(0, 'run')
        args.insert(0, 'go')

    child = subprocess.Popen(args, stdout=subprocess.PIPE)
    streamdata = child.communicate()[0]
    ret = child.returncode
    return streamdata.decode(), ret


def random_string(size):
    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(size))


def do_login(user, password, correction_file, time_to_sleep, is_exploitable):
    time.sleep(time_to_sleep)
    streamdata, ret = run_cmd(correction_file, ["login", user, password])
    if "You are logged in. And congratz " in streamdata:
        is_exploitable.value = is_exploitable.value + 1


def do_register(user, password, correction_file):
    _, _ = run_cmd(correction_file, ["register", user, password])


# return false if the code is not exploitable anymore
def exploit(correction_file, secret):
    not_more_than = 6
    is_exploitable = Value('i', 0)
    while is_exploitable.value == 0:
        user = random_string(25)
        password = random_string(25)
        register = Process(target=do_register, args=(user, password, correction_file,))
        login1 = Process(target=do_login, args=(user, password, correction_file, 0, is_exploitable,))
        login2 = Process(target=do_login, args=(user, password, correction_file, 0.15, is_exploitable,))
        login3 = Process(target=do_login, args=(user, password, correction_file, 0.25, is_exploitable,))
        login4 = Process(target=do_login, args=(user, password, correction_file, 0.30, is_exploitable,))
        login5 = Process(target=do_login, args=(user, password, correction_file, 0.35, is_exploitable,))
        login6 = Process(target=do_login, args=(user, password, correction_file, 0.40, is_exploitable,))
        login7 = Process(target=do_login, args=(user, password, correction_file, 0.45, is_exploitable,))
        login8 = Process(target=do_login, args=(user, password, correction_file, 0.50, is_exploitable,))
        register.start()
        login1.start()
        login2.start()
        login3.start()
        login4.start()
        login5.start()
        login6.start()
        login7.start()
        login8.start()
        login1.join()
        login2.join()
        login3.join()
        login4.join()
        login5.join()
        login6.join()
        login7.join()
        login8.join()
        register.join()
        not_more_than -= 1
        if not_more_than <= 0:
            break
    if is_exploitable.value > 0:
        print("I am quick enough to log in before inserting in forbidden_ids.")
        return True
    return False


def main():

    correction_file = sys.argv[1]
    secret = sys.argv[2]
    return_code = 3 if exploit(correction_file, secret) else 0
    sys.exit(return_code)


if __name__ == "__main__":
    main()
