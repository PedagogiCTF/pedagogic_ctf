{
	"name": "Race Condition",
	"points": 250,
	"description": "This application lets the user register and login.\nThere is a column in the users table that tells wether or not an user is authorized to see the secret.\nWhen you register, this field is set to false.\n\nThe vulnerability you'll need to exploit is called a 'race condition' and is really common in API-like application.\nYou should always use transaction when your database can be in a instable state.\n\nHint : use curl :\ncurl 'http(s)://thishost.com/v1.0/challenge/race_condition/execute' -d '{\"action\":\"register\",\"login\":\"testlogin\",\"password\":\"testlogin\", \"language\": \"PYTHON\"}'\ncurl 'http(s)://thishost.com/v1.0/challenge/race_condition/execute' -d '{\"action\":\"login\",\"login\":\"testlogin\",\"password\":\"testlogin\", \"language\": \"PYTHON\"}'",
	"parameters": [
		{
			"name": "action",
			"placeholder": "login or register"
		},
		{
			"name": "login",
			"placeholder": "myEmail"
		},
		{
			"name": "password",
			"placeholder": "my (not-real-one-because-this-is-http-app) password"
		}
	],
	"languages": [
		{
			"name": "PYTHON", 
			"extension": ".py"
		},
		{
			"name": "PERL",
			"extension": ".pl"
		}
	],
	"resolved_conclusion":"\n\nThis vulnerability is common when dealing with APIs.\nIt's quite hard to detect as a developper, so be carefull ! Ask you the good questions.\n\nTo avoid this vulnerability you could use db transactions."
}
